<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Nginx 二级域名映射</title>
      <link href="/Nginx-%E4%BA%8C%E7%BA%A7%E5%9F%9F%E5%90%8D%E6%98%A0%E5%B0%84/"/>
      <url>/Nginx-%E4%BA%8C%E7%BA%A7%E5%9F%9F%E5%90%8D%E6%98%A0%E5%B0%84/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="添加二级域名解析"><a href="#添加二级域名解析" class="headerlink" title="添加二级域名解析"></a>添加二级域名解析</h3><ul><li><a href="https://blog.csdn.net/weixin_41196185/article/details/79619057" target="_blank" rel="noopener">二级域名解析配置方法</a></li></ul><p><img src="https://images.dclzs.com/202005201724-1.png" alt="image-20200520172416137"></p><a id="more"></a> <h3 id="配置-Nginx"><a href="#配置-Nginx" class="headerlink" title="配置 Nginx"></a>配置 Nginx</h3><ul><li><a href="https://blog.csdn.net/code_shadow/article/details/81546471" target="_blank" rel="noopener">通过Nginx在同一台服务器上配置多个二级域名</a></li></ul><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment"># $1 正则表达式中第一个括号匹配到的字符</span></span><br><span class="line"><span class="comment"># ~* 不区分大小写匹配，例如 $http_host ~* "BLOG.DCLZS.COM" 条件为真</span></span><br><span class="line"><span class="comment"># $http_host 就是 blog.dclzs.com，如果有端口则会带上端口</span></span><br><span class="line"><span class="comment"># 网页中访问的是 blog.dclzs.com，那匹配到的就是 blog</span></span><br><span class="line"><span class="comment"># set $domain $1，给 domain 变量赋予 blog 字符串值</span></span><br><span class="line"><span class="attribute">if</span> ( <span class="variable">$http_host</span> <span class="regexp">~* "^(.*?)\.dclzs\.com"</span> ) &#123;</span><br><span class="line">    <span class="attribute">set</span> <span class="variable">$domain</span> <span class="variable">$1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attribute">location</span> / &#123;</span><br><span class="line">    if( $domain ~* "blog" ) &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://myblog.dclzs.com;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="相关解释"><a href="#相关解释" class="headerlink" title="相关解释"></a>相关解释</h3><ul><li><a href="https://www.cnblogs.com/zh-dream/p/12834056.html" target="_blank" rel="noopener">Nginx中$http_host、$host、$proxy_host的区别</a></li></ul><table><thead><tr><th>变量</th><th>是否显示端口</th><th>值是否存在</th></tr></thead><tbody><tr><td>host</td><td>否</td><td><code>host:port</code> 显示值为 <code>host:8080</code> 的时候，只显示 <code>host</code></td></tr><tr><td>http_host</td><td>是</td><td><code>host:post</code>，<code>post</code> 存在就显示</td></tr><tr><td>proxy_host</td><td>默认80不显示其他端口显示</td><td><code>host:port</code> 显示</td></tr></tbody></table><ul><li><p><a href="https://www.cnblogs.com/xiangzhong/p/11355252.html" target="_blank" rel="noopener">nginx配置location |=|<del>|</del>*|^~| /uri/ { … }用法</a></p><p>= 严格匹配。如果这个查询匹配，那么将停止搜索并立即处理此请求。</p><p>~ 为区分大小写匹配(可用正则表达式)</p><p>!~为区分大小写不匹配</p><p>~* 为不区分大小写匹配(可用正则表达式)</p><p>!~*为不区分大小写不匹配</p><p>^~ 如果把这个前缀用于一个常规字符串,那么告诉 nginx 如果路径匹配那么不测试正则表达式。</p></li></ul><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><ol><li><a href="https://blog.csdn.net/weixin_41196185/article/details/79619057" target="_blank" rel="noopener">二级域名解析配置方法</a></li><li><a href="https://blog.csdn.net/code_shadow/article/details/81546471" target="_blank" rel="noopener">通过Nginx在同一台服务器上配置多个二级域名</a></li><li><a href="https://blog.csdn.net/cbmljs/article/details/86573248" target="_blank" rel="noopener">nginx中 $1,$2,$3是什么?</a></li><li><a href="https://www.cnblogs.com/zh-dream/p/12834056.html" target="_blank" rel="noopener">Nginx中$http_host、$host、$proxy_host的区别</a></li><li><a href="https://www.cnblogs.com/xiangzhong/p/11355252.html" target="_blank" rel="noopener">nginx配置location |=|<del>|</del>*|^~| /uri/ { … }用法</a></li><li><a href="https://segmentfault.com/a/1190000002797606" target="_blank" rel="noopener">nginx配置location总结及rewrite规则写法</a></li><li><a href="https://www.w3cschool.cn/nginxsysc/nginxsysc-rewrite.html" target="_blank" rel="noopener">Nginx rewrite配置</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> 配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>踩坑：第 1 期</title>
      <link href="/%E8%B8%A9%E5%9D%91%EF%BC%9A%E7%AC%AC%201%20%E6%9C%9F/"/>
      <url>/%E8%B8%A9%E5%9D%91%EF%BC%9A%E7%AC%AC%201%20%E6%9C%9F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>本文记录开发过程中遇到的问题</p><a id="more"></a><hr><h3 id="MySQL-1055-Expression-this-is-incompatible-with-sql-mode-only-full-group-by"><a href="#MySQL-1055-Expression-this-is-incompatible-with-sql-mode-only-full-group-by" class="headerlink" title="MySQL 1055 - Expression; this is incompatible with sql_mode=only_full_group_by"></a><code>MySQL 1055 - Expression; this is incompatible with sql_mode=only_full_group_by</code></h3><blockquote><p>之前偷懒，用命令配置了一下，重启之后就失效了。</p></blockquote><p>错误原因：在 <code>MySQL5.7</code> 之后，<code>sql_mode</code> 中默认存在 <code>ONLY_FULL_GROUP_BY</code>，<code>SQL</code> 语句未通过 <code>ONLY_FULL_GROUP_BY</code> 语义检查所以报错。</p><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 首先登录 MySQL 查看 sql_mode</span></span><br><span class="line">mysql&gt; SELECT @@SQL_MODE;</span><br><span class="line">+-------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| @@SQL_MODE                                                                                                                                |</span><br><span class="line">+-------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION |</span><br><span class="line">+-------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑 MySQL 配置文件(/etc/my.ini)</span></span><br><span class="line">$ vim /etc/my.ini</span><br><span class="line"><span class="comment"># 在[mysqld]下添加以下内容</span></span><br><span class="line"><span class="attr">sql_mode</span>=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</span><br><span class="line"><span class="comment"># 重启服务</span></span><br><span class="line">$ systemctl restart mysqld</span><br></pre></td></tr></table></figure><h4 id="sql-model-相关解释"><a href="#sql-model-相关解释" class="headerlink" title="sql_model 相关解释"></a><code>sql_model</code> 相关解释</h4><ul><li><p><code>ONLY_FULL_GROUP_BY</code></p><p>出现在 <code>select</code> 语句、<code>HAVING</code> 条件和 <code>ORDER BY</code> 语句中的列，必须是 <code>GROUP BY</code> 的列或者依赖于<code>GROUP BY</code> 列的函数列。</p></li><li><p><code>NO_AUTO_VALUE_ON_ZERO</code></p><p>该值影响自增长列的插入。默认设置下，插入 <code>0</code> 或 <code>NULL</code> 代表生成下一个自增长值。如果用户希望插入的值为 <code>0</code>，而该列又是自增长的，那么这个选项就有用了。</p></li><li><p><code>STRICT_TRANS_TABLES</code></p><p>在该模式下，如果一个值不能插入到一个事务表中，则中断当前的操作，对非事务表不做限制</p></li><li><p><code>NO_ZERO_IN_DATE</code></p><p>这个模式影响了是否允许日期中的月份和日包含 <code>0</code>。如果开启此模式，<code>2016-01-00</code> 是不允许的，但是 <code>0000-02-01</code> 是允许的。它实际的行为受到 <code>strict mode</code> 是否开启的影响 <code>1</code>。</p></li><li><p><code>NO_ZERO_DATE</code></p><p>设置该值，<code>mysql</code> 数据库不允许插入零日期。它实际的行为受到 <code>strict mode</code> 是否开启的影响2。</p></li><li><p><code>ERROR_FOR_DIVISION_BY_ZERO</code></p><p>在 <code>INSERT</code> 或 <code>UPDATE</code> 过程中，如果数据被零除，则产生错误而非警告。如果未给出该模式，那么数据被零除时 <code>MySQL</code> 返回 <code>NULL</code></p></li><li><p><code>NO_AUTO_CREATE_USER</code></p><p>禁止 <code>GRANT</code> 创建密码为空的用户</p></li><li><p><code>NO_ENGINE_SUBSTITUTION</code></p><p>如果需要的存储引擎被禁用或未编译，那么抛出错误。不设置此值时，用默认的存储引擎替代，并抛出一个异常</p></li><li><p><code>PIPES_AS_CONCAT</code></p><p>将 ”||” 视为字符串的连接操作符而非或运算符，这和 <code>Oracle</code> 数据库是一样的，也和字符串的拼接函数 <code>Concat</code> 相类似</p></li><li><p><code>ANSI_QUOTES</code></p><p>启用 <code>ANSI_QUOTES</code> 后，不能用双引号来引用字符串，因为它被解释为识别符</p></li></ul><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><ol><li><p><a href="https://blog.csdn.net/qq_37253891/article/details/99731476" target="_blank" rel="noopener">SQL 报错1055</a></p></li><li><p><a href="https://www.cnblogs.com/haoyul/p/9882853.html" target="_blank" rel="noopener">MySQL 错误1055</a></p></li></ol><hr><h3 id="关键字与字段名称冲突（查询不区分大小写）"><a href="#关键字与字段名称冲突（查询不区分大小写）" class="headerlink" title="关键字与字段名称冲突（查询不区分大小写）"></a>关键字与字段名称冲突（查询不区分大小写）</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加测试数据</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tb_test(</span><br><span class="line">    <span class="string">`id`</span> <span class="built_in">int</span> auto_increment,</span><br><span class="line">    <span class="string">`key`</span> <span class="built_in">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    primary <span class="keyword">key</span> (<span class="string">`id`</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb_test(<span class="string">`id`</span>,<span class="string">`key`</span>) <span class="keyword">values</span>(<span class="number">1</span>, <span class="string">'key123'</span>),(<span class="number">2</span>, <span class="string">'key456'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># key 实际上是数据库的关键字，以下是错误示范</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">key</span> <span class="keyword">from</span> <span class="keyword">key</span> = <span class="string">'KEY123'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 正确示范（最好还是别用关键字当作字段名）</span></span><br><span class="line"><span class="keyword">select</span> <span class="string">`key`</span> <span class="keyword">from</span> <span class="string">`key`</span> = <span class="string">'KEY123'</span>;</span><br></pre></td></tr></table></figure><hr><h3 id="条件查询-VARCHAR-类型字段少写单引号"><a href="#条件查询-VARCHAR-类型字段少写单引号" class="headerlink" title="条件查询 VARCHAR 类型字段少写单引号"></a>条件查询 <code>VARCHAR</code> 类型字段少写单引号</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加测试数据</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tb_test1(</span><br><span class="line">    <span class="string">`id`</span> <span class="built_in">int</span> auto_increment,</span><br><span class="line">    <span class="string">`a`</span> <span class="built_in">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    primary <span class="keyword">key</span> (<span class="string">`id`</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb_test1(<span class="string">`id`</span>,<span class="string">`a`</span>) <span class="keyword">values</span>(<span class="number">1</span>, <span class="string">'9'</span>),(<span class="number">2</span>, <span class="string">'10'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 正确示例</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb_test1 a!=<span class="string">'0'</span>;</span><br><span class="line"><span class="comment"># 错误示例（不推荐这样写，踩到这个坑的时候特意去创个表试了下，结果没问题...但在原场景却有问题）</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb_test1 a!=<span class="number">0</span>;</span><br></pre></td></tr></table></figure><hr><h3 id="根据-VARCHAR-类型的字段排序"><a href="#根据-VARCHAR-类型的字段排序" class="headerlink" title="根据 VARCHAR 类型的字段排序"></a>根据 <code>VARCHAR</code> 类型的字段排序</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加测试数据</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tb_test2(</span><br><span class="line">    <span class="string">`id`</span> <span class="built_in">int</span> auto_increment,</span><br><span class="line">    <span class="string">`a`</span> <span class="built_in">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    primary <span class="keyword">key</span> (<span class="string">`id`</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb_test2(<span class="string">`id`</span>,<span class="string">`a`</span>) <span class="keyword">values</span>(<span class="number">1</span>, <span class="string">'9'</span>),(<span class="number">2</span>, <span class="string">'10'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行下面这条 sql，返回结果是 9，所以，请注意了</span></span><br><span class="line"><span class="keyword">select</span> a <span class="keyword">from</span> tb_test2 <span class="keyword">order</span> <span class="keyword">by</span> a <span class="keyword">desc</span> <span class="keyword">limit</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure><hr><h3 id="mybatis-plus-两个相同的方法名（参数不一样）"><a href="#mybatis-plus-两个相同的方法名（参数不一样）" class="headerlink" title="mybatis plus 两个相同的方法名（参数不一样）"></a><code>mybatis plus</code> 两个相同的方法名（参数不一样）</h3><p>方法如下 <code>TestMapper.java</code></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Select</span>(<span class="string">"select * from tb_test where `key` = #&#123;key&#125;"</span>)</span><br><span class="line"><span class="meta">@ResultMap</span>(<span class="string">"BaseResultMap"</span>)</span><br><span class="line"><span class="function">List&lt;Dict&gt; <span class="title">selectByKey</span><span class="params">(@Param(<span class="string">"key"</span>)</span> String key)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Select</span>(<span class="string">"select * from tb_test where `key` = #&#123;key&#125; and `name` = #&#123;name&#125;"</span>)</span><br><span class="line"><span class="meta">@ResultMap</span>(<span class="string">"BaseResultMap"</span>)</span><br><span class="line"><span class="function">List&lt;Dict&gt; <span class="title">selectByKey</span><span class="params">(@Param(<span class="string">"key"</span>)</span> String key, @<span class="title">Param</span><span class="params">(<span class="string">"name"</span>)</span> String name)</span>;</span><br></pre></td></tr></table></figure><p>项目启动时打印的错误信息</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ERROR c.b.mybatisplus.MybatisConfiguration - mapper[com.example.TestMapper.selectByKey] is ignored, because it&#39;s exists, maybe from xml file</span><br></pre></td></tr></table></figure><p>调用时的错误信息</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nested exception is org.apache.ibatis.binding.BindingException: Parameter &#39;name&#39; not found. Available parameters are [key, param1]</span><br></pre></td></tr></table></figure><p>解决方法及思路（奇怪的是，在本地跑正常运行，在服务器上就报错）</p><ul><li><code>TestMapper.xml</code> 文件中的 <code>id</code> 都是唯一的，也就是说方法名也得唯一的</li></ul><hr><h3 id="Response-响应头设置文件下载"><a href="#Response-响应头设置文件下载" class="headerlink" title="Response 响应头设置文件下载"></a><code>Response</code> 响应头设置文件下载</h3><blockquote><p>看来设置请求头也要注意顺序</p></blockquote><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># 正确示例</span><br><span class="line">String url = <span class="string">"https://images.dclzs.com/P6lnC64DQRNX.png"</span>;</span><br><span class="line"><span class="keyword">byte</span>[] bytes = IOUtils.toByteArray(<span class="keyword">new</span> URL(url));</span><br><span class="line">response.setContentType(<span class="string">"multipart/form-data"</span>);</span><br><span class="line">response.setHeader(<span class="string">"Content-Disposition"</span>, <span class="string">"attachment;fileName="</span> + System.currentTimeMillis() + <span class="string">".png"</span>);</span><br><span class="line">response.getOutputStream().write(bytes, <span class="number">0</span>, bytes.length);</span><br><span class="line">response.getOutputStream().flush();</span><br><span class="line"></span><br><span class="line"># 错误示例</span><br><span class="line">String url = <span class="string">"https://images.dclzs.com/P6lnC64DQRNX.png"</span>;</span><br><span class="line"><span class="keyword">byte</span>[] bytes = IOUtils.toByteArray(<span class="keyword">new</span> URL(url));</span><br><span class="line">response.getOutputStream().write(bytes, <span class="number">0</span>, bytes.length);</span><br><span class="line">response.setContentType(<span class="string">"multipart/form-data"</span>);</span><br><span class="line">response.setHeader(<span class="string">"Content-Disposition"</span>, <span class="string">"attachment;fileName="</span> + System.currentTimeMillis() + <span class="string">".png"</span>);</span><br><span class="line">response.getOutputStream().flush();</span><br></pre></td></tr></table></figure><hr><h3 id="微信公众号用户昵称保存到数据库时报错"><a href="#微信公众号用户昵称保存到数据库时报错" class="headerlink" title="微信公众号用户昵称保存到数据库时报错"></a>微信公众号用户昵称保存到数据库时报错</h3><p>这个是由于数据长度而导致的问题，<code>MySQL</code> 中的 <code>utf8</code> 实际上是 <code>utf8mb3</code> ，配置成 <code>utf8mb4</code> 就可以了</p><p>具体配置方法参考 <a href="https://dclzs.com/%E5%A6%82%E4%BD%95%E5%9C%A8%20CentOS%20%E4%B8%8A%E5%AE%89%E8%A3%85%20MySQL%20%E6%95%B0%E6%8D%AE%E5%BA%93/#%E9%85%8D%E7%BD%AE%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%AD%97%E7%AC%A6%E9%9B%86%E5%92%8C%E6%8E%92%E5%BA%8F%E8%A7%84%E5%88%99" target="_blank" rel="noopener">配置应用程序字符集和排序规则</a></p><hr><h3 id="微信小程序码生成出现-47001-data-format-error-错误"><a href="#微信小程序码生成出现-47001-data-format-error-错误" class="headerlink" title="微信小程序码生成出现 47001 data format error 错误"></a>微信小程序码生成出现 <code>47001 data format error</code> 错误</h3><p>文档链接 <a href="https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/qr-code/wxacode.getUnlimited.html" target="_blank" rel="noopener"><code>https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/qr-code/wxacode.getUnlimited.html</code></a></p><p>请求地址 <code>POST https://api.weixin.qq.com/wxa/getwxacodeunlimit?access_token=ACCESS_TOKEN</code></p><p>请求参数（这里只写了部分参数，详情参数去看文档）</p><table><thead><tr><th>属性</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>access_token</td><td>string</td><td><a href="https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/access-token/auth.getAccessToken.html" target="_blank" rel="noopener">接口调用凭证</a></td></tr><tr><td>scene</td><td>string</td><td>最大32个可见字符，只支持数字，大小写英文以及部分特殊字符：<code>!#$&amp;&#39;()*+,/:;=?@-._~</code>，其它字符请自行编码为合法字符（因不支持<code>%</code>，中文无法使用 <code>urlencode</code> 处理，请使用其他编码方式）</td></tr></tbody></table><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li><code>POST</code> 参数需要转成 <code>JSON</code> 字符串，不支持 <code>form</code> 表单提交。</li><li>接口只能生成已发布的小程序的二维码</li><li>调用分钟频率受限（5000次/分钟），如需大量小程序码，建议预生成</li></ul><h4 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String url = <span class="string">"https://api.weixin.qq.com/wxa/getwxacodeunlimit?access_token=ACCESS_TOKEN"</span>.replace(<span class="string">"ACCESS_TOKEN"</span>, getAccessToken());</span><br><span class="line">Map&lt;String, String&gt; data = <span class="keyword">new</span> <span class="keyword">new</span> LinkedHashMap&lt;&gt;();</span><br><span class="line">data.put(<span class="string">"scene"</span>, scene);</span><br><span class="line"><span class="comment">// 这里对应注意事项第一条，需要转成 JSON 字符串（这里用的是 fastjson 库）</span></span><br><span class="line">String requestJson = JSONObject.toJSONString(data);</span><br><span class="line"><span class="comment">// 用别的类型接收直接报错（String 我试过不会报错，但是..直接乱码）</span></span><br><span class="line"><span class="comment">// 错误信息是没有找到对应的消息转换器（HttpMessageConverter）</span></span><br><span class="line"><span class="keyword">byte</span>[] response = restTemplate.postForObject(url, requestJson, <span class="keyword">byte</span>[]<span class="class">.<span class="keyword">class</span>)</span>;</span><br></pre></td></tr></table></figure><h4 id="参考链接-1"><a href="#参考链接-1" class="headerlink" title="参考链接"></a>参考链接</h4><ol><li><a href="https://developers.weixin.qq.com/community/develop/doc/000e6cf20c0b90779bb995d075140" target="_blank" rel="noopener">小程序订阅信息的发送报错47001</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 踩坑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/hello-world/"/>
      <url>/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>        <div id="aplayer-TtsLAxYE" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-TtsLAxYE"),            narrow: false,            autoplay: true,            showlrc: false,            music: {              title: "summertime（Arrange ver.）（翻自 cinnamons）",              author: "麦吉_Maggie / 盖盖Nyan",              url: "https://images.dclzs.com/SJajCdS77AVQ.mp3",              pic: "https://images.dclzs.com/Fl2p93yrCHUq.png",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script>]]></content>
      
      
      <categories>
          
          <category> Hello World </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hello World </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx 前后端分离</title>
      <link href="/Nginx%20%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/"/>
      <url>/Nginx%20%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul><li><p>此处略过打包上传服务器的步骤，并且假设包上传在服务器的 /server 目录</p><ul><li>打包好的前端文件路径 <code>/server/page/dist.zip</code></li><li>打包好的后端文件路径 <code>/server/war/app.jar</code></li><li>前端访问路径 <code>http://127.0.0.1</code></li><li>后端访问路径 <code>http://127.0.0.1:8080</code></li><li>日志存放路径 <code>/server/logs/app.log</code></li></ul></li></ul><a id="more"></a><ul><li><p>解压之前打包的前端文件放到 <code>unzip -n /server/page/dist.zip -d /server/page/</code></p></li><li><p>运行后端项目 <code>nohup java -jar /server/war/app.jar &gt; /server/logs/app.log 2&gt;&amp;1 &amp;</code></p></li><li><p><strong>简化的配置</strong>：编辑 <code>nginx.conf</code> 文件</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">      <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">      <span class="attribute">server_name</span> <span class="number">127.0.0.1</span> localhost;</span><br><span class="line">      </span><br><span class="line">      <span class="comment"># 以下是 try_files 的解释</span></span><br><span class="line">      <span class="comment"># 当用户请求 http://127.0.0.1/articles 时，这里的 $uri 就是 /articles。 </span></span><br><span class="line">      <span class="comment"># try_files 会到硬盘里尝试找这个文件。如果存在名为 /server/page/dist/articles，就直接把这个文件的内容发送给用户。 </span></span><br><span class="line">      <span class="comment"># 显然，目录中没有叫 articles 的文件。然后就看 $uri/，增加了一个 /，也就是看有没有名为 /server/page/dist/articles/ 的目录。 </span></span><br><span class="line">      <span class="comment"># 又找不到，就会 fall back 到 try_files 的最后一个选项 /index.html，发起一个内部 “子请求”，也就是相当于 nginx 发起一个 HTTP 请求到 http://127.0.0.1/index.html。</span></span><br><span class="line">      <span class="attribute">location</span> / &#123;</span><br><span class="line">          <span class="attribute">root</span> /server/page/dist;</span><br><span class="line">          <span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.html;</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      <span class="comment"># 这个地方需要注意一下</span></span><br><span class="line">      <span class="comment"># 如果前端调用的是 http://127.0.0.1/api/articles </span></span><br><span class="line">      <span class="comment"># 而后端的真实地址是 http://127.0.0.1:8080/articles</span></span><br><span class="line">      <span class="comment"># 则需要配置成 proxy_pass http://127.0.0.1:8080/;</span></span><br><span class="line">      <span class="comment"># 否则就按下面这种配置就可以用了</span></span><br><span class="line">      <span class="comment"># 主要区别在于有没有带上 /api</span></span><br><span class="line">      <span class="attribute">location</span><span class="regexp"> ^~</span> /api/ &#123;</span><br><span class="line">          <span class="attribute">proxy_pass</span> http://127.0.0.1:8080;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><ol><li><a href="https://www.cnblogs.com/boundless-sky/p/9459775.html" target="_blank" rel="noopener">nginx中try_files</a></li><li><a href="https://www.cnblogs.com/xinxinmifan/p/nginx-setting.html" target="_blank" rel="noopener">Nginx实现前端访问后端本地接口</a></li><li><a href="https://blog.csdn.net/cjd6568358/article/details/51871039" target="_blank" rel="noopener">使用nginx搭建前端项目web服务器以及利用反向代理调试远程后台接口</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> 配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell 语法与代码示例</title>
      <link href="/Shell%20%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B/"/>
      <url>/Shell%20%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>记录 Shell 语法与代码示例，持续更新….</p></blockquote><a id="more"></a><h3 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建一个 shell_test.sh 的脚本文件</span></span><br><span class="line">vim shell_test.sh</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 写入以下内容，保存退出</span></span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">echo "Hello Shell!"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 赋予“可执行”权限</span></span><br><span class="line">chmod 744 shell_test.sh</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 执行脚本</span></span><br><span class="line">./shell_test.sh</span><br></pre></td></tr></table></figure><h4 id="变量、撤销变量、静态变量（常量）"><a href="#变量、撤销变量、静态变量（常量）" class="headerlink" title="变量、撤销变量、静态变量（常量）"></a>变量、撤销变量、静态变量（常量）</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 语法：变量名=值</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 注意：等号两边不要有空格，如果字符串值中包含空格就必须写在双引号内</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 定义一个 msg 变量，并赋予 “Hello Shell!” 的值</span></span><br><span class="line">msg="Hello Shell!"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 语法：<span class="built_in">unset</span> 变量</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 注意：不能撤销静态变量</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 撤销 msg 变量</span></span><br><span class="line">unset msg </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 语法：<span class="built_in">readonly</span> 变量</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 声明 hi 静态变量</span></span><br><span class="line">readonly hi="hello"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 语法：引用变量使用$变量即可引用</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 输出变量</span></span><br><span class="line">echo $msg</span><br><span class="line">echo $hi</span><br></pre></td></tr></table></figure><h4 id="数值计算"><a href="#数值计算" class="headerlink" title="数值计算"></a>数值计算</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 注意：(()) 的使用方法与 <span class="built_in">let</span> 完全相同；但是可以直接输出结果。</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用 <span class="built_in">let</span> 命令赋值</span></span><br><span class="line">a=1</span><br><span class="line">let c=a+a</span><br><span class="line">echo c=$c</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用 (()) 命令进行处理</span></span><br><span class="line">a=1</span><br><span class="line">echo c=$((a+a))</span><br></pre></td></tr></table></figure><h4 id="条件判断（参考-Shell-if-条件判断）"><a href="#条件判断（参考-Shell-if-条件判断）" class="headerlink" title="条件判断（参考 Shell if 条件判断）"></a>条件判断（参考 <a href="https://blog.csdn.net/zhan570556752/article/details/80399154" target="_blank" rel="noopener">Shell if 条件判断</a>）</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 注意：使用[]和[[]]的时候不要吝啬空格</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 条件判断语法：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="keyword">if</span> [ <span class="built_in">command</span> ];<span class="keyword">then</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">    符合该条件执行的语句</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="keyword">elif</span> [ <span class="built_in">command</span> ];<span class="keyword">then</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">    符合该条件执行的语句</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="keyword">else</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">    符合该条件执行的语句</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="keyword">fi</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 定义变量 a,b</span></span><br><span class="line">a=1</span><br><span class="line">b=2</span><br><span class="line">c=3</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 判断 a+a 是否等于 b</span></span><br><span class="line">if [[ $((a+a)) == $b ];then</span><br><span class="line">  echo "$a+$a=$b"</span><br><span class="line">else</span><br><span class="line">  echo "$a+$a!=$b"</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 判断 b 大于 a，并且 a + b 不等于 c</span></span><br><span class="line">if [[ $b &gt; $a ]]&amp;&amp;[[ $((a+b)) = $c ]];then</span><br><span class="line">  echo "$b&gt;$a&amp;&amp;$a+$b=c"</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 定义变量 sa,sb,sc</span></span><br><span class="line">sa="qwer"</span><br><span class="line">sb="asdf"</span><br><span class="line">sc="zxcv"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 判断 sa 与 sb 的内容</span></span><br><span class="line">if [ $sa = $sb ];then</span><br><span class="line">  echo "$sa=$sb"</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 判断 sa 与 sb 的长度</span></span><br><span class="line">if [ $&#123;#sa&#125; = $&#123;#sb&#125; ];then</span><br><span class="line">  echo "$sa length == $sb length"</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h4 id="数组与循环"><a href="#数组与循环" class="headerlink" title="数组与循环"></a>数组与循环</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 定义一个数组</span></span><br><span class="line">array=("a" "b" "c" "d")</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 循环输出数组内容</span></span><br><span class="line">for ((i=0;i&lt;$&#123;#array[@]&#125;;i++));do</span><br><span class="line">  echo "$((i+1)) =&gt; $&#123;array[i]&#125;"</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 从 1 循环到 10</span></span><br><span class="line">for i in $(seq 1 10);do</span><br><span class="line">  echo $i</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h4 id="命令行传参、交互式变量（参考-Shell：传递命令行参数）"><a href="#命令行传参、交互式变量（参考-Shell：传递命令行参数）" class="headerlink" title="命令行传参、交互式变量（参考 Shell：传递命令行参数）"></a>命令行传参、交互式变量（参考 <a href="https://blog.csdn.net/xuejianbest/article/details/85048894" target="_blank" rel="noopener">Shell：传递命令行参数</a>）</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 命令行传入的参数可以使用以下命令获取</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="variable">$1</span> 获取第一个值，以此类推</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="variable">$#</span> 表示传递到脚本的参数个数</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> $* 表示以一个单字符串显示所有向脚本传递的参数。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> $$ 表示脚本运行的当前进程ID号</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> $! 表示后台运行的最后一个进程的ID号</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="variable">$@</span> 与$*相同，依次返回每个参数。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> $- 表示Shell使用的当前选项，与<span class="built_in">set</span>命令功能相同。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> $? 表示最后命令的退出状态。0表示没有错误，其他任何值表明有错误。</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 交互式变量</span></span><br><span class="line">read -p "请输入你的选项: " IN_A</span><br><span class="line">echo "$IN_A"</span><br></pre></td></tr></table></figure><h4 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">b()&#123;</span><br><span class="line">  echo $1</span><br><span class="line">  echo $2</span><br><span class="line">&#125;</span><br><span class="line">b "有参无返回值" "function 可以省略"</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 返回字符串</span></span><br><span class="line">function c()&#123;</span><br><span class="line">  echo "这里是字符串"</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 返回数值</span></span><br><span class="line">function cc()&#123;</span><br><span class="line">  return 1</span><br><span class="line">&#125;</span><br><span class="line">echo $(c)</span><br><span class="line">cc</span><br><span class="line">echo $?</span><br></pre></td></tr></table></figure><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><ol><li><a href="https://www.cnblogs.com/zwxo1/p/11438649.html" target="_blank" rel="noopener">Centos7——17.SHELL 编程（1）</a></li><li><a href="https://www.cnblogs.com/yinghao1991/p/7622777.html" target="_blank" rel="noopener">shell中的数值运算</a></li><li><a href="https://blog.csdn.net/zhan570556752/article/details/80399154" target="_blank" rel="noopener">Shell if 条件判断</a></li><li><a href="https://blog.csdn.net/xuejianbest/article/details/85048894" target="_blank" rel="noopener">Shell：传递命令行参数</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> 代码示例 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何在 CentOS 上安装 Samba 服务</title>
      <link href="/%E5%A6%82%E4%BD%95%E5%9C%A8%20CentOS%20%E4%B8%8A%E5%AE%89%E8%A3%85%20Samba%20%E6%9C%8D%E5%8A%A1/"/>
      <url>/%E5%A6%82%E4%BD%95%E5%9C%A8%20CentOS%20%E4%B8%8A%E5%AE%89%E8%A3%85%20Samba%20%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul><li>参考资料<ul><li><a href="https://wiki.samba.org/index.php/User_Documentation" target="_blank" rel="noopener">官方参考手册</a></li><li><a href="https://www.samba.org/samba/docs/current/man-html/smb.conf.5.html" target="_blank" rel="noopener">官方配置说明</a></li><li><a href="http://linux.vbird.org/linux_server/0370samba.php" target="_blank" rel="noopener">鸟哥的 <strong>Linux</strong> 私房菜 - SAMBA 服务器</a></li><li><a href="https://www.cnblogs.com/pipci/p/10154393.html" target="_blank" rel="noopener">Debian9.5 系统 Samba 配置说明</a></li><li><a href="https://www.jianshu.com/p/15893eece2ee" target="_blank" rel="noopener">SAMBA</a></li><li><a href="https://wiki.samba.org/index.php/Setting_up_Samba_as_a_Standalone_Server" target="_blank" rel="noopener">将 Samba 设置为独立服务器</a></li><li><a href="https://www.cnblogs.com/pipci/p/10144840.html" target="_blank" rel="noopener">NetBios, NetBios over TCP/IP, SMB 之间的关系</a></li><li><a href="https://www.cnblogs.com/wangaohui/p/5116519.html" target="_blank" rel="noopener">关于 Windows 的 139 和 445 端口</a></li></ul></li></ul><a id="more"></a><h3 id="卸载-Samba-服务"><a href="#卸载-Samba-服务" class="headerlink" title="卸载 Samba 服务"></a>卸载 Samba 服务</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看是否安装</span></span><br><span class="line">rpm -qa|grep samba</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 卸载 samba</span></span><br><span class="line">yum remove -y samba*</span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除 samba 配置文件目录（可选）</span></span><br><span class="line">rm -rf /etc/samba/</span><br></pre></td></tr></table></figure><h3 id="安装-Samba-服务"><a href="#安装-Samba-服务" class="headerlink" title="安装 Samba 服务"></a>安装 Samba 服务</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装 samba, 分别是服务端与客户端</span></span><br><span class="line">sudo yum install -y samba samba-client</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 备份配置文件（可选）</span></span><br><span class="line">sudo cp /etc/samba/smb.conf /etc/samba/smb.conf.bak</span><br></pre></td></tr></table></figure><h3 id="配置-Samba-服务"><a href="#配置-Samba-服务" class="headerlink" title="配置 Samba 服务"></a>配置 Samba 服务</h3><blockquote><p>注意：文件访问不到或不能写入是因为权限设置的问题，另外还需要配置 selinux 跟防火墙</p><p>最终权限的权限 = 共享设置的权限 &amp; 文件系统本身的权限</p></blockquote><ul><li><p>匿名访问的共享（来自官方的配置示例）</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[global]</span><br><span class="line">        map to guest = Bad User</span><br><span class="line">        log file = /var/log/samba/%m</span><br><span class="line">        log level = 1</span><br><span class="line"></span><br><span class="line">[guest]</span><br><span class="line">        # This share allows anonymous (guest) access</span><br><span class="line">        # without authentication!</span><br><span class="line">        path = /srv/samba/guest/</span><br><span class="line">        read only = no</span><br><span class="line">        guest ok = yes</span><br><span class="line">        guest only = yes</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 配置后才拥有写入权限（试过了，但是好像不行..）</span></span><br><span class="line">chmod o+w /srv/samba/guest/</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>账号密码访问的共享（来自鸟哥的配置示例）</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[global]</span><br><span class="line">        workgroup = vbirdhouse</span><br><span class="line">        netbios name = vbirdserver</span><br><span class="line">        server string = This is vbird's samba server</span><br><span class="line">        unix charset = utf8</span><br><span class="line">        # display charset = utf8 这行会报错</span><br><span class="line">        dos charset = cp950</span><br><span class="line">        log file = /var/log/samba/log.%m</span><br><span class="line">        max log size = 50</span><br><span class="line">        load printers = no</span><br><span class="line"></span><br><span class="line">        #与密码有关的设定项目，包括密码档案所在格式喔！</span><br><span class="line">        security = user           &lt;==这行就是重点啦！改成user层级 </span><br><span class="line">        passdb backend = tdbsam   &lt;==使用的是TDB资料库格式！</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2.分享的资源设定方面：删除temp加入homes与project </span></span><br><span class="line">[homes]                                    &lt;==分享的资源名称</span><br><span class="line">        comment = Home Directories</span><br><span class="line">        browseable = no                &lt;==除了使用者自己外，不可被其他人浏览 </span><br><span class="line">        writable = yes               &lt;==挂载后可读写此分享 </span><br><span class="line">        create mode = 0664              &lt;==建立档案的权限为664 </span><br><span class="line">        directory mode = 0775              &lt;= =建立目录的权限为775</span><br><span class="line"></span><br><span class="line">[project]                                  &lt;==就是那三位使用者的共享资源</span><br><span class="line">        comment = smbuser's project</span><br><span class="line">        path = /home/project         &lt;==实际的Linux上面的目录位置 </span><br><span class="line">        browseable = yes                   &lt;==可被其他人所浏览到资源名称(非内容) </span><br><span class="line">        writable = yes                   &lt;==可以被写入 </span><br><span class="line">        write list = @users                &lt;==写入者有哪些人的意思</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建 /home/project 文件夹，并配置权限</span></span><br><span class="line">mkdir /home/project </span><br><span class="line">chgrp users /home/project </span><br><span class="line">chmod 2770 /home/project </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建用户，设置密码 123</span></span><br><span class="line">useradd -G users xiaoming</span><br><span class="line">echo 123 | passwd --stdin xiaoming</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加到 samba 用户列表（同时需要设置密码）</span></span><br><span class="line">pdbedit -a -u xiaoming</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启服务</span></span><br><span class="line">systemctl restart nmb</span><br><span class="line">systemctl restart smb</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 测试</span></span><br><span class="line">smbclient -L //127.0.0.1 -Uxiaoming</span><br></pre></td></tr></table></figure></li></ul><h3 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建一个 xiaoming 的用户</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> —G &lt;groupName&gt;  添加到指定用户组</span></span><br><span class="line">useradd -G users xiaoming</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置密码 1234</span></span><br><span class="line">echo 1234 | passwd --stdin xiaoming </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> pdbedit 分配 smb 访问用户（必须是系统中已存在的用户）</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 选项与参数：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -L ：列出目前在资料库当中的帐号与UID 等相关资讯；</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -v ：需要搭配-L 来执行，可列出更多的讯息，包括家目录等资料；</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -w ：需要搭配-L 来执行，使用旧版的smbpasswd 格式来显示资料；</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -a ：新增一个可使用Samba 的帐号，后面的帐号需要在/etc/passwd 内存在者；</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -r ：修改一个帐号的相关资讯，需搭配很多特殊参数，请man pdbedit；</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -x ：删除一个可使用Samba 的帐号，可先用-L 找到帐号后再删除；</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -m ：后面接的是机器的代码(machine account)，与domain model 有关！</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看已分配的用户</span></span><br><span class="line">pdbedit -L </span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加用户（这里要设置密码）</span></span><br><span class="line">pdbedit -a -u xiaoming</span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除用户</span></span><br><span class="line">pdbedit -x -u xiaoming</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> smbpasswd 修改 smb 访问用户的密码</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 选项与参数：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> smbpasswd [username]</span></span><br><span class="line">smbpasswd xiaoming</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> smb 客户端连接测试</span></span><br><span class="line"><span class="meta">#</span><span class="bash">选项与参数：</span></span><br><span class="line"><span class="meta">#</span><span class="bash">-L ：仅查阅后面接的主机所提供分享的目录资源；</span></span><br><span class="line"><span class="meta">#</span><span class="bash">-U ：以后面接的这个帐号来尝试取得该主机的可使用资源</span></span><br><span class="line">smbclient -L //127.0.0.1 -Uxiaoming</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭服务</span></span><br><span class="line">systemctl stop nmb</span><br><span class="line">systemctl stop smb</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启用服务</span></span><br><span class="line">systemctl start nmb</span><br><span class="line">systemctl start smb</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> 安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
            <tag> Samba </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何在 CentOS 上安装 MySQL 数据库</title>
      <link href="/%E5%A6%82%E4%BD%95%E5%9C%A8%20CentOS%20%E4%B8%8A%E5%AE%89%E8%A3%85%20MySQL%20%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>/%E5%A6%82%E4%BD%95%E5%9C%A8%20CentOS%20%E4%B8%8A%E5%AE%89%E8%A3%85%20MySQL%20%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul><li>官方参考手册<ul><li><a href="https://dev.mysql.com/doc/refman/5.7/en/linux-installation-yum-repo.html" target="_blank" rel="noopener">2.5.1使用 MySQL Yum 存储库在 Linux 上安装 MySQL</a></li><li><a href="https://dev.mysql.com/doc/refman/5.7/en/server-error-reference.html" target="_blank" rel="noopener">B.3.1 MySQL 数据库错误消息参考</a></li></ul></li><li>安装介绍<ul><li>文中的错误信息点击可跳转到相关网页以便解决问题</li><li>系统版本：CentOS 7</li><li>要安装的数据库版本：MySQL 5.7</li></ul></li></ul><a id="more"></a><h3 id="安装-MySQL-数据库"><a href="#安装-MySQL-数据库" class="headerlink" title="安装 MySQL 数据库"></a>安装 MySQL 数据库</h3><ul><li><p>配置 MySQL 软件源</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/yum.repos.d/mysql-community.repo</span><br></pre></td></tr></table></figure></li><li><p>添加以下内容（<code>CentOS6</code>）</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[mysql57-community]</span><br><span class="line">name=MySQL 5.7 Community Server</span><br><span class="line">baseurl=http://repo.mysql.com/yum/mysql-5.7-community/el/6/$basearch/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</span><br></pre></td></tr></table></figure></li><li><p>添加以下内容（<code>CentOS7</code>）</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[mysql57-community]</span><br><span class="line">name=MySQL 5.7 Community Server</span><br><span class="line">baseurl=http://repo.mysql.com/yum/mysql-5.7-community/el/7/$basearch/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</span><br></pre></td></tr></table></figure></li><li><p>执行 <code>yum</code> 命令安装</p><blockquote><p>有可能出现 <a href="https://blog.csdn.net/lcyaiym/article/details/77282336" target="_blank" rel="noopener">GPG key retrieval failed: [Errno 14] curl#37 - “Couldn’t open file /etc/pki/rpm-gpg/RPM-GPG-KEY-mysql”</a> 错误，提示找不到 <code>RPM-GPG-KEY-mysql</code> 文件</p></blockquote><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo yum install mysql-community-server</span><br></pre></td></tr></table></figure></li><li><p>启动 <code>mysql</code> 服务</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看是否安装成功</span></span><br><span class="line">rpm -qa|grep mysql</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看是否已启动</span></span><br><span class="line">ps -ef|grep mysqld</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动服务（未启动的情况下执行）</span></span><br><span class="line">system start mysqld</span><br></pre></td></tr></table></figure></li><li><p>连接 <code>mysql</code> 数据库，数据库默认密码在 /var/log/mysqld.log 文件内的第六行末尾处</p><blockquote><p>连接上 <code>mysql</code> 后，进行任何操作都会出现 <a href="http://dev.mysql.com/doc/refman/5.6/en/alter-user.html" target="_blank" rel="noopener">ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.</a> 错误，因为密码是由数据库自动生成的初始密码，我们得修改默认初始密码。</p></blockquote><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure></li><li><p>修改 <code>root</code> 密码</p><blockquote><p>如果密码设置为 123456 将会出现 <a href="http://dev.mysql.com/doc/refman/5.7/en/validate-password-plugin.html" target="_blank" rel="noopener">ERROR 1819 (HY000): Your password does NOT satisfy the CURRENT policy requirements</a> 错误，因为密码太过简单无法通过 <code>mysql</code> <a href="https://dev.mysql.com/doc/refman/5.7/en/validate-password-options-variables.html" target="_blank" rel="noopener">默认密码策略</a>的验证。</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 默认密码策略如下：</span><br><span class="line">mysql&gt; SHOW VARIABLES LIKE &#39;validate_password%&#39;;</span><br><span class="line">+--------------------------------------+--------+</span><br><span class="line">| Variable_name                        | Value  |</span><br><span class="line">+--------------------------------------+--------+</span><br><span class="line">| validate_password_check_user_name    | OFF    |</span><br><span class="line">| validate_password_dictionary_file    |        |</span><br><span class="line">| validate_password_length             | 8      |</span><br><span class="line">| validate_password_mixed_case_count   | 1      |</span><br><span class="line">| validate_password_number_count       | 1      |</span><br><span class="line">| validate_password_policy             | MEDIUM |</span><br><span class="line">| validate_password_special_char_count | 1      |</span><br><span class="line">+--------------------------------------+--------+</span><br><span class="line">7 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"># 修改密码策略等级（重启后失效）</span><br><span class="line">mysql&gt; SET GLOBAL validate_password_policy&#x3D;LOW;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"># 修改密码长度策略（重启后失效）</span><br><span class="line">mysql&gt; SET GLOBAL validate_password_length&#x3D;6;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"># 修改密码为 123456</span><br><span class="line">mysql&gt; SET PASSWORD &#x3D; PASSWORD(&#39;123456&#39;);</span><br></pre></td></tr></table></figure></li></ul><h3 id="配置应用程序字符集和排序规则"><a href="#配置应用程序字符集和排序规则" class="headerlink" title="配置应用程序字符集和排序规则"></a><a href="https://dev.mysql.com/doc/refman/5.7/en/charset-applications.html" target="_blank" rel="noopener">配置应用程序字符集和排序规则</a></h3><ul><li><p>首先我们找到<a href="https://dev.mysql.com/doc/refman/5.7/en/option-files.html" target="_blank" rel="noopener">配置文件</a>位置，以下是 <code>MySQL</code> 的全局选项配置文件全路径</p><table><thead><tr><th>文件名</th><th>用途</th></tr></thead><tbody><tr><td>/etc/my.cnf</td><td>全局选项</td></tr><tr><td>/etc/mysql/my.cnf</td><td>Global options</td></tr></tbody></table></li><li><p>然后我们开始<a href="https://dev.mysql.com/doc/refman/5.7/en/charset-applications.html" target="_blank" rel="noopener">配置字符集和排序规则</a></p><blockquote><p>可使用 <code>show charset;</code> 命令查看所支持的字符集和排序规则</p><p>还有一点就是 <code>utf8</code> 单个字符只占用 <code>3</code> 个，而 <code>utf8mb4</code> 单个字节占用 <code>4</code> 个字节，详细信息点击 <a href="https://dev.mysql.com/doc/refman/5.6/en/charset-unicode.html" target="_blank" rel="noopener">10.9 Unicode 支持</a>查看</p></blockquote><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 编辑配置文件</span></span><br><span class="line">vim /etc/my.conf</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 在 [mysqld] 分组下加上以下内容</span></span><br><span class="line">character-set-server=utf8mb4</span><br><span class="line">collation-server=utf8mb4_general_ci</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重新启动服务使配置生效</span></span><br><span class="line">systemctl restart mysqld</span><br></pre></td></tr></table></figure></li></ul><h3 id="用户访问权限配置"><a href="#用户访问权限配置" class="headerlink" title="用户访问权限配置"></a>用户访问权限配置</h3><ul><li><p><a href="https://dev.mysql.com/doc/refman/5.7/en/creating-accounts.html" target="_blank" rel="noopener">创建账号和权限分配</a></p><blockquote><p><a href="https://dev.mysql.com/doc/refman/5.7/en/create-user.html" target="_blank" rel="noopener">CREATE USER 语句</a>，<a href="https://dev.mysql.com/doc/refman/5.7/en/grant.html" target="_blank" rel="noopener">GRANT 语句</a>，<a href="https://dev.mysql.com/doc/refman/5.7/en/revoke.html" target="_blank" rel="noopener">REVOKE 语句</a>，<a href="https://dev.mysql.com/doc/refman/5.7/en/drop-user.html" target="_blank" rel="noopener">DROP USER 语句</a></p><p>要使用<a href="https://dev.mysql.com/doc/refman/5.7/en/create-user.html" target="_blank" rel="noopener"><code>CREATE USER</code></a>，必须具有全局<a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_create-user" target="_blank" rel="noopener"><code>CREATE USER</code></a> 权限</p><p>要使用 <a href="https://dev.mysql.com/doc/refman/5.7/en/grant.html" target="_blank" rel="noopener"><code>GRANT</code></a>，必须具有 <a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_grant-option" target="_blank" rel="noopener"><code>GRANT OPTION</code></a> 权限</p><p>要使用<a href="https://dev.mysql.com/doc/refman/5.7/en/revoke.html" target="_blank" rel="noopener"><code>REVOKE</code></a>语法，必须具有<a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_grant-option" target="_blank" rel="noopener"><code>GRANT OPTION</code></a> 权限</p><p>要使用<a href="https://dev.mysql.com/doc/refman/5.7/en/drop-user.html" target="_blank" rel="noopener"><code>DROP USER</code></a>，必须具有全局<a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_create-user" target="_blank" rel="noopener"><code>CREATE USER</code></a> 权限</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 创建一个用户名为 xiaoming，密码为 123456，具有访问 bankaccount 数据库的所有权限，以及 GRANT OPTION 权限，但该账户只能从 localhost 连接到服务器。</span><br><span class="line">CREATE USER &#39;xiaoming&#39;@&#39;localhost&#39;</span><br><span class="line">IDENTIFIED BY &#39;123456&#39;;</span><br><span class="line">GRANT ALL</span><br><span class="line">  ON bankaccount.*</span><br><span class="line">  TO &#39;xiaoming&#39;@&#39;localhost&#39;</span><br><span class="line">  WITH GRANT OPTION;</span><br><span class="line"></span><br><span class="line"># 撤销账户权限</span><br><span class="line">REVOKE ALL</span><br><span class="line">ON bankaccount.*</span><br><span class="line">FROM &#39;xiaoming&#39;@&#39;localhost&#39;;</span><br><span class="line"></span><br><span class="line"># 查看 xiaoming 用户的权限</span><br><span class="line">SHOW GRANTS FOR &#39;xiaoming&#39;@&#39;localhost&#39;\G;</span><br><span class="line"></span><br><span class="line"># 删除 xiaoming 用户</span><br><span class="line">DROP USER &#39;xiaoming&#39;@&#39;localhost&#39;;</span><br></pre></td></tr></table></figure></li></ul><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 启动 mysql 服务</span></span><br><span class="line">sudo systemctl start mysqld</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭 mysql 服务</span></span><br><span class="line">sudo systemctl stop mysqld</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启 mysql 服务</span></span><br><span class="line">sudo systemctl restart mysqld</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看字符集</span></span><br><span class="line">show variables like '%character%';</span><br><span class="line">show variables like '%collation%';</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看 xiaoming 用户的权限</span></span><br><span class="line">show grants for 'xiaoming'@'localhost'\G;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看用户信息</span></span><br><span class="line">show create user 'xiaoming'@'localhost'\G;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> 安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
